@page
@model ManageUsersModel

@{
    @inject UserManager<User> userManager;
    @inject IServiceFactory serviceFactory;
    var rolePermissionsService = serviceFactory.GetRolePermissionsService();
    var loggedInUser = await userManager.GetUserAsync(User);
    if (loggedInUser == null)
    {
        Response.Redirect("/Identity/Account/Login");
        return;
    }
    else if (!await rolePermissionsService.HasPermission(loggedInUser, RolePermissions.ManageUsers))
    {
        Response.Redirect("/Home/PermissionError");
        return;
    }
}

@{
    ViewData["Title"] = "Benutzer verwalten";
    ViewData["ActivePage"] = ManageNavPages.ManageUsers;
}

<div class="col-sm-12 col-md-12 col-lg-12 col-xl-8 col-xxl-8">
    <h3>@ViewData["Title"]</h3>
    <hr />
    <form method="post">
        @Html.AntiForgeryToken()

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Benutzer</th>
                    <th>Rolle</th>
                    <th class="text-end">Aktionen</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr class="align-middle">
                        <td>@user.User.UserName</td>
                        <td>@user.Role</td>
                        <td class="text-end text-nowrap">
                            @if (user.User.UserName != "admin")
                            {
                                @if (await rolePermissionsService.HasPermission(loggedInUser, RolePermissions.ChangeUserRole))
                                {
                                    <span>
                                        <button type="submit" class="btn btn-info text-nowrap" asp-page-handler="ChangeRole" asp-route-userId="@user.User.Id">
                                            Rolle ändern
                                        </button>
                                    </span>
                                }
                                @if (await rolePermissionsService.HasPermission(loggedInUser, RolePermissions.DeleteUsers))
                                {
                                    if (await rolePermissionsService.HasPermission(loggedInUser, RolePermissions.ChangeUserRole))
                                    {
                                        <span class="me-2"></span>
                                    }
                                    <span>
                                        <button type="submit" class="btn btn-info text-nowrap" asp-page-handler="Delete" asp-route-userId="@user.User.Id">
                                            Löschen
                                        </button>
                                    </span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (await rolePermissionsService.HasPermission(loggedInUser, RolePermissions.AddUsers))
        {
            <button type="submit" class="btn btn-info text-nowrap" asp-page-handler="CreateUser">
                Neuer Benutzer
            </button>
        }
    </form>
</div>
