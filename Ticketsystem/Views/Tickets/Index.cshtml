@model IEnumerable<TicketViewModel>
@{
    @inject UserManager<User> userManager;
    @inject IServiceFactory serviceFactory;
    var loggedInUser = await userManager.GetUserAsync(User);
    if (!await serviceFactory.GetRolePermissionsService().HasPermission(loggedInUser, RolePermissions.ViewTickets))
    {
        Context.Response.Redirect("PermissionError");
        return;
    }
}

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Tickets</h1>

<p>
    <div class="row">
        @if (loggedInUser != null)
        {
            @if (await serviceFactory.GetRolePermissionsService().HasPermission(loggedInUser, RolePermissions.ViewTickets))
            {
                <div class="col-md-4">
                    <h5>Neues Ticket:</h5>
                    <div class="d-grid gap-2">
                        <a class="btn btn-primary" asp-action="Create" type="button">Neues Ticket erstellen</a>
                    </div>
                </div>
            }
        }
        <div class="col-md-4">
            <h5>Ticket suchen:</h5>
            <form class="d-flex">
                <input class="form-control me-sm-2" type="search" placeholder="Ticketnummer">
                <input class="form-control me-sm-2" type="search" placeholder="Nachname">
                <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
    </div>
</p>

<div style="margin-bottom: 20px">
    <span class="badge bg-danger">Offen</span>
    <span class="badge bg-primary">In Bearbeitung</span>
    <span class="badge bg-success">Geschlossen</span>
    <div class="progress">
        <div class="progress-bar bg-danger" role="progressbar" style="width: 15%;" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>
        <div class="progress-bar bg-primary" role="progressbar" style="width: 30%;" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"></div>
        <div class="progress-bar bg-success" role="progressbar" style="width: 55%;" aria-valuenow="55" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
</div>

@{
    bool ToggleDoReverse(string category)
    {
        if (ViewBag.OffSet != 0)
        {
            return false;
        }
        if (ViewBag.SortBy == category)
        {
            if (ViewBag.DoReverse)
            {
                return false;
            }
            else
            {
                return true;
            }
        }

        return false;
    }
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { Take = ViewBag.Take, OffSet = 0, SortBy = "Name", DoReverse = ToggleDoReverse("Name") })
            </th>
            <th>
                @Html.ActionLink("Auftragsdatum", "Index", new { Take = ViewBag.Take, OffSet = 0, SortBy = "OrderDate", DoReverse = ToggleDoReverse("OrderDate") })
            </th>
            <th>
                @Html.ActionLink("Auftragsart", "Index", new { Take = ViewBag.Take, OffSet = 0, SortBy = "TicketType", DoReverse = ToggleDoReverse("TicketType") })
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { Take = ViewBag.Take, OffSet = 0, SortBy = "TicketStatus", DoReverse = ToggleDoReverse("TicketStatus") })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketStatus)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Bearbeiten</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Öffnen</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Löschen</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row">
    <div class="col-1">
        @if (!ViewBag.DoReverse && ViewBag.OffSet > 9)
        {
            @Html.ActionLink("10 zurück", "Index", new { Take = 10, OffSet = ViewBag.Offset - 10, SortBy = ViewBag.SortBy, DoReverse = false})
        }
        else if (ViewBag.DoReverse && ViewBag.OffSet < ViewBag.TicketsCount - 10)
        {
            @Html.ActionLink("10 zurück", "Index", new { Take = 10, OffSet = ViewBag.Offset + 10, SortBy = ViewBag.SortBy, DoReverse = true})
        }
    </div>
    <div class="col-1">
        @if (!ViewBag.DoReverse && ViewBag.OffSet < ViewBag.TicketsCount - 10)
        {
            @Html.ActionLink("10 vor", "Index", new { Take = 10, OffSet = ViewBag.Offset + 10, SortBy = ViewBag.SortBy, DoReverse = false})
        }
        else if (ViewBag.DoReverse && ViewBag.OffSet > 9)
        {
            @Html.ActionLink("10 vor", "Index", new { Take = 10, OffSet = ViewBag.Offset - 10, SortBy = ViewBag.SortBy, DoReverse = true})
        }
    </div>
</div>
