@model ClientViewModel

@inject UserManager<User> userManager;
@inject IServiceFactory serviceFactory;

@{
    var rolePermissionsService = serviceFactory.GetRolePermissionsService();
    var loggedInUser = await userManager.GetUserAsync(User);
    if (loggedInUser == null)
    {
        Context.Response.Redirect("/Identity/Account/Login");
        return;
    }
    if (!await rolePermissionsService.HasPermission(loggedInUser, RolePermissions.DeleteClients))
    {
        Context.Response.Redirect("/Home/PermissionError");
        return;
    }
}

@{
    ViewData["Title"] = "Kunde löschen";
}

<div class="d-flex justify-content-center align-items-center">
    <div class="col-sm-12 col-md-10 col-lg-9 col-xl-8">
        <div class="container">
            <h2>Wollen Sie diesen Kunden wirklich löschen?</h2>
            <hr />

            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Email)
                </dd>
            </dl>

            <div class="row mb-3">
                <form asp-action="Delete">
                    <input type="hidden" asp-for="Id" />
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form>
            </div>

            <div class="row">
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>
